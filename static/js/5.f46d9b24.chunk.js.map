{"version":3,"file":"static/js/5.f46d9b24.chunk.js","mappings":"sNAIaA,EAAO,mCAAG,6GAEIC,EAAAA,EAAAA,IAAA,UAJV,8CAIU,UAFJ,cAEbC,EAFa,yBAIZA,GAJY,gCAMnBC,QAAQC,MAAR,MANmB,yDAAH,qD,SCwDpB,EAvDgB,WACd,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAA4CN,EAAAA,EAAAA,WAAS,GAArD,eAAOO,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGACOf,IADP,gBACRgB,EADQ,EACRA,KACRH,GAAkB,GAElBI,YAAW,WACTV,EAAQS,GACRH,GAAkB,EACnB,GAAE,KAPa,2CAAH,qDASfE,GAED,GAAE,IAUH,OACE,qBAASG,UAAU,UAAnB,WACE,wBAAI,YAEHN,GACC,SAAC,KAAD,KAEA,iCACE,SAAC,KAAD,CAAUN,KAAMA,EAAKa,MAAM,EAAGX,KAE7BE,GACC,SAAC,KAAD,KAEA,8BACGF,EAAOF,EAAKc,SACX,mBAAQC,KAAK,SAASC,QAAS,kBAvB5BC,EAuB2C,EAtB1DZ,GAAgB,QAChBM,YAAW,WACTR,EAAQD,EAAOe,GACfZ,GAAgB,EACjB,GAAE,KALY,IAAAY,CAuB4B,EAA/B,SAAkD,qBAUjE,C","sources":["services/Api.js","pages/Catalog/Catalog.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://65213eb8a4199548356cf568.mockapi.io';\n\nexport const getCars = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/cars`);\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import './Catalog.scss';\nimport { ListCars, Loader } from '../../components';\nimport { useEffect, useState } from 'react';\nimport { getCars } from '../../services/Api';\n\nconst Catalog = () => {\n  const [cars, setCars] = useState([]);\n  const [page, setPage] = useState(8);\n  const [isLoadingBtn, setIsLoadingBtn] = useState(false);\n  const [isLoadingFetch, setIsLoadingFetch] = useState(false);\n\n  useEffect(() => {\n    const fetchCars = async () => {\n      const { data } = await getCars();\n      setIsLoadingFetch(true);\n\n      setTimeout(() => {\n        setCars(data);\n        setIsLoadingFetch(false);\n      }, 500);\n    };\n    fetchCars();\n    // eslint-disable-next-line\n  }, []);\n\n  const loadMore = edit => {\n    setIsLoadingBtn(true);\n    setTimeout(() => {\n      setPage(page + edit);\n      setIsLoadingBtn(false);\n    }, 500);\n  };\n\n  return (\n    <section className=\"catalog\">\n      <h2>Catalog</h2>\n\n      {isLoadingFetch ? (\n        <Loader />\n      ) : (\n        <>\n          <ListCars cars={cars.slice(0, page)} />\n\n          {isLoadingBtn ? (\n            <Loader />\n          ) : (\n            <>\n              {page < cars.length && (\n                <button type=\"button\" onClick={() => loadMore(8)}>\n                  Load more\n                </button>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default Catalog;\n"],"names":["getCars","axios","response","console","error","useState","cars","setCars","page","setPage","isLoadingBtn","setIsLoadingBtn","isLoadingFetch","setIsLoadingFetch","useEffect","fetchCars","data","setTimeout","className","slice","length","type","onClick","edit"],"sourceRoot":""}